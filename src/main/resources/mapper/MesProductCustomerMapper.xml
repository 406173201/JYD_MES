<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.jyd.dao.MesProductCustomerMapper">
	<resultMap id="BaseResultMap" type="com.jyd.model.MesProduct">
		<id column="id" property="id" jdbcType="INTEGER" />
		<result column="p_id" property="pId" jdbcType="INTEGER" />
		<result column="product_id" property="productId"
			jdbcType="VARCHAR" />
		<result column="product_orderid" property="productOrderid"
			jdbcType="INTEGER" />
		<result column="product_planid" property="productPlanid"
			jdbcType="INTEGER" />
		<result column="product_targetweight"
			property="productTargetweight" jdbcType="REAL" />
		<result column="product_realweight"
			property="productRealweight" jdbcType="REAL" />
		<result column="product_leftweight"
			property="productLeftweight" jdbcType="REAL" />
		<result column="product_bakweight" property="productBakweight"
			jdbcType="REAL" />
		<result column="product_irontype" property="productIrontype"
			jdbcType="VARCHAR" />
		<result column="product_irontypeweight"
			property="productIrontypeweight" jdbcType="REAL" />
		<result column="product_materialname"
			property="productMaterialname" jdbcType="VARCHAR" />
		<result column="product_imgid" property="productImgid"
			jdbcType="VARCHAR" />
		<result column="product_heatid" property="productHeatid"
			jdbcType="VARCHAR" />
		<result column="product_materialsource"
			property="productMaterialsource" jdbcType="VARCHAR" />
		<result column="product_status" property="productStatus"
			jdbcType="INTEGER" />
		<result column="product_remark" property="productRemark"
			jdbcType="VARCHAR" />
		<result column="product_operator" property="productOperator"
			jdbcType="VARCHAR" />
		<result column="product_operate_time"
			property="productOperateTime" jdbcType="TIMESTAMP" />
		<result column="product_operate_ip" property="productOperateIp"
			jdbcType="VARCHAR" />
	</resultMap>
	<sql id="Base_Column_List">
		id, p_id, product_id, product_orderid, product_planid,
		product_targetweight, product_realweight,
		product_leftweight,
		product_bakweight, product_irontype, product_irontypeweight,
		product_materialname, product_imgid, product_heatid,
		product_materialsource, product_status,
		product_remark,
		product_operator, product_operate_time, product_operate_ip
	</sql>
	
	<select id="productBindSearchPage" resultMap="BaseResultMap" parameterType="map">
		SELECT
		<include refid="Base_Column_List" />
		FROM mes_product
		<include refid="queryConditions" />
		AND product_status = 1
		ORDER BY product_operate_time DESC,id DESC
		limit
		#{page.offset},
		#{page.pageSize}
	</select>
	
	<sql id="queryBind">
		<where>
			<if test="dto.search_msource!=null">
				AND mes_product.`product_materialsource`=
				#{dto.search_msource}
			</if>
			<if test="dto.keyword!=null and dto.keyword != ''">
				AND (
				(product_id like #{dto.keyword}) or
				(p_id like
				#{dto.keyword}) or
				(product_materialname like #{dto.keyword}) or
				(product_materialsource like #{dto.keyword}) or
				(product_targetweight like #{dto.keyword}) or
				(product_realweight
				like #{dto.keyword}) or
				(product_leftweight like #{dto.keyword}) or
				(product_imgid like #{dto.keyword}) or
				(product_irontype like
				#{dto.keyword}) or
				(product_irontypeweight like #{dto.keyword}) or
				(product_status like #{dto.keyword}) or
				(product_remark like
				#{dto.keyword}) or
				(product_heatid like #{dto.keyword})
				)
			</if>
		</where>
	</sql>
	

	<select id="seacheProductIronList" resultMap="BaseResultMap"
		parameterType="map">
		SELECT
		<include refid="Base_Column_List" />
		FROM mes_product
		<include refid="queryConditions" />
		AND product_status = #{dto.search_status}
		ORDER BY product_operate_time DESC,id DESC
		limit
		#{page.offset},
		#{page.pageSize}
	</select>

	<update id="productBatchStartByid" parameterType="list">
		update mes_product set product_status=1
		where id in
		<foreach collection="arrayid" item="id" index="index" open="("
			separator="," close=")">
			#{id}
		</foreach>
	</update>

	<select id="getProductCount" resultType="Long">
		SELECT COUNT( 1 ) FROM
		mes_product
	</select>

	<select id="getMaxId" resultType="string">
		SELECT product_id FROM
		mes_product ORDER BY product_id DESC LIMIT 0,1;
	</select>

	<select id="selectProductIdByintoDbId" resultType="string"
		parameterType="string">
		SELECT product_id FROM mes_product where
		product_id=${intoDbId};
	</select>

	<select id="countBySearchDto" resultType="int"
		parameterType="map">
		SELECT count(1) FROM mes_product
		<include refid="queryConditions" />
	</select>

	<select id="searchproductList" resultMap="BaseResultMap"
		parameterType="map">
		SELECT
		<include refid="Base_Column_List" />
		FROM mes_product
		<include refid="queryConditions" />
		AND product_status = 0
		ORDER BY product_operate_time DESC,id DESC
		limit
		#{page.offset},
		#{page.pageSize}
	</select>

	<select id="seacheProductComeList" resultMap="BaseResultMap"
		parameterType="map">
		SELECT
		<include refid="Base_Column_List" />
		FROM mes_product
		<include refid="queryConditions" />
		AND product_status = 1
		ORDER BY product_operate_time DESC,id DESC
		limit
		#{page.offset},
		#{page.pageSize}
	</select>
	
	
	
	<sql id="queryConditions">
		<where>
			<if test="dto.search_msource==null">
				AND mes_product.`product_materialsource` IN
				('钢材','外购件','外协件')
			</if>
			<if test="dto.search_msource!=null">
				AND mes_product.`product_materialsource`=
				#{dto.search_msource}
			</if>
			<if test="dto.keyword!=null and dto.keyword != ''">
				AND (
				(product_id like #{dto.keyword}) or
				(p_id like
				#{dto.keyword}) or
				(product_materialname like #{dto.keyword}) or
				(product_materialsource like #{dto.keyword}) or
				(product_targetweight like #{dto.keyword}) or
				(product_realweight
				like #{dto.keyword}) or
				(product_leftweight like #{dto.keyword}) or
				(product_imgid like #{dto.keyword}) or
				(product_irontype like
				#{dto.keyword}) or
				(product_irontypeweight like #{dto.keyword}) or
				(product_status like #{dto.keyword}) or
				(product_remark like
				#{dto.keyword}) or
				(product_heatid like #{dto.keyword})
				)
			</if>
		</where>
	</sql>
</mapper>